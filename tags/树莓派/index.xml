<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>树莓派 on Q's Blog</title><link>https://xingxiang.me/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/</link><description>Recent content in 树莓派 on Q's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 01 Jan 2017 10:07:22 +0000</lastBuildDate><atom:link href="https://xingxiang.me/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/index.xml" rel="self" type="application/rss+xml"/><item><title>树莓派3 + LCD1602 硬件连接 代码</title><link>https://xingxiang.me/blog/843/</link><pubDate>Sun, 01 Jan 2017 10:07:22 +0000</pubDate><guid>https://xingxiang.me/blog/843/</guid><description>LCD 1602 树莓派Model B Pin示意图： 硬件连接（从上到下对应LCD1602 1-16号Pin） Pin 用法 VSS 接地 VDD 接5V电源 VO 液晶对比度调节，接电位器（需要一个10k电位器）中间的引脚，电位器两边的引脚分别接5V和接地。 RS 寄存器选择，接GPIO14 RW 读写选择，接地，表示写模式 EN 使能信号，接GPIO15 D0 数据位0，4位工作模式下不用，不接 D1 数据位1，4位工作模式下不用，不接 D2 数据位2，4位工作模式下不用，不接 D3 数据位3，4位工作模式下不用，不接 D4 数据位4，接GPIO17 D5 数据位5，接GPIO18 D6 数据位6，接GPIO27 D7 数据位7，接GPIO22 A 液晶屏背光+，接5V K 液晶屏背光-，接地 接好后通电就会显示一行空白，一行黑格子，如果什么也不显示，调节电位器电阻即可。
代码 Github ： https://github.com/lifanxi/rpimenu
解压后有 Adafruit_CharLCD.py 文件，运行此文件在LCD上会显示两行字符：LCD 1602 Test, 123456789ABCDEF。
只需要在此文件上进行一下修改就可以自定义显示你想要的内容了（如果不是按上表的GPIO，记住修改）。</description></item><item><title>树莓派3 定时上传CUP温度到 yeelink 代码</title><link>https://xingxiang.me/blog/842/</link><pubDate>Fri, 30 Dec 2016 13:24:03 +0000</pubDate><guid>https://xingxiang.me/blog/842/</guid><description>CPUtemperature.py 代码
#!/usr/bin/env python import requests import json import time file = open(&amp;#34;/sys/class/thermal/thermal_zone0/temp&amp;#34;) CPUtemperature = float(file.read()) / 1000 file.close print &amp;#34;CPU Temperature :&amp;#34;, CPUtemperature topost_CPUtemperature_payload={&amp;#39;value&amp;#39;:CPUtemperature} url_CPUtemperature=&amp;#39;你的传感器URL&amp;#39; header={&amp;#39;U-ApiKey&amp;#39;:&amp;#39;你的Apikey&amp;#39;, &amp;#39;content-type&amp;#39;: &amp;#39;application/json&amp;#39;} post_CPUtemperature = requests.post(url_CPUtemperature,headers=header,data=json.dumps(topost_CPUtemperature_payload)) yeelink.sh 代码
sudo python /home/pi/yeelink.py 运行
sudo chmod +x /home/pi/yeelink.sh 设置定时5分钟运行一次
sudo crontab -e 加入
*/5 * * * * /home/pi/yeelink.sh</description></item><item><title>树莓派3 + DHT11 温湿度传感器 + 定时上传 yeelink 代码 + 数据过滤</title><link>https://xingxiang.me/blog/840/</link><pubDate>Fri, 30 Dec 2016 01:19:44 +0000</pubDate><guid>https://xingxiang.me/blog/840/</guid><description>DHT11.py 代码
#!/usr/bin/python import RPi.GPIO as GPIO import time import requests import json #Read data from DHT11 def DHT11(): channel = 17 data = [] j = 0 GPIO.setmode(GPIO.BCM) time.sleep(1) GPIO.setup(channel, GPIO.OUT) GPIO.output(channel, GPIO.LOW) time.sleep(0.02) GPIO.output(channel, GPIO.HIGH) GPIO.setup(channel, GPIO.IN) while GPIO.input(channel) == GPIO.LOW: continue while GPIO.input(channel) == GPIO.HIGH: continue while j &amp;amp;lt; 40: k = 0 while GPIO.input(channel) == GPIO.LOW: continue while GPIO.input(channel) == GPIO.HIGH: k += 1 if k &amp;gt; 100: break if k &amp;amp;lt; 8: data.</description></item><item><title>树莓派apt加速 替换apt源为国内镜像</title><link>https://xingxiang.me/blog/838/</link><pubDate>Mon, 26 Dec 2016 06:32:27 +0000</pubDate><guid>https://xingxiang.me/blog/838/</guid><description>因为众所周知的原因，Linux默认的apt源在国内神慢……换吧
1.改sources.list
sudo vim /etc/apt/sources.list 内容全部改为
deb http://mirrors.ustc.edu.cn/raspbian/raspbian/ buster main contrib non-free rpi #deb-src http://mirrors.ustc.edu.cn/raspbian/raspbian/ buster main contrib non-free rpi 2.改raspi.list
sudo vim /etc/apt/sources.list.d/raspi.list 内容全部改为
deb http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ buster main ui deb-src http://mirrors.ustc.edu.cn/archive.raspberrypi.org/debian/ buster main ui 爽快！</description></item></channel></rss>