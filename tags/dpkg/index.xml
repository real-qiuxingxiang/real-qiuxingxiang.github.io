<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dpkg on Q's Blog</title><link>https://xingxiang.me/tags/dpkg/</link><description>Recent content in dpkg on Q's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 22 Jul 2013 06:28:44 +0000</lastBuildDate><atom:link href="https://xingxiang.me/tags/dpkg/index.xml" rel="self" type="application/rss+xml"/><item><title>在电脑上，iOS 设备上制作 .deb 插件汉化包</title><link>https://xingxiang.me/blog/465/</link><pubDate>Mon, 22 Jul 2013 06:28:44 +0000</pubDate><guid>https://xingxiang.me/blog/465/</guid><description>1.如何汉化插件？ 请看我的第 1 篇教程： https://xingxiang.me/blog/466/
2.认识什么是.deb 请看我的第 2 篇教程：https://xingxiang.me/blog/463/ （建议看完此文，再看本文）
准备工作： 电脑上：必须使用linux系统（mac上需要安装 fink 或者 macport ） fink安装请参考此贴：http://bbs.weiphone.com/read-htm-tid-5596730.html
iOS 上： 必须 越狱 且安装 MobileTerminal
.strings文件模板：点击下载
教程开始：
电脑上：(我的系统是mac os x，且已安装fink) 1.创建需要 同 放置汉化.strings路径一样 的 文件夹 （看完我的第一篇教程：https://xingxiang.me/blog/466/）
现在我正在制作 DietBulletin汉化包 ，汉化.strings 需要放到 /Library/PreferenceLoader/Preferences/zh_CN.lproj 里。。看图
2.创建DEBIAN文件夹（在此deb文件夹的根目录）并在里面创建 control 文件
（看我的第二篇教程：https://xingxiang.me/blog/463/）
打开终端，获取su权限 输入命令 看图 回车
至此一个deb汉化包已完成，放到ifile安装就行了。
ios设备上： 1.把你刚刚的创建的文件夹放到：/var/mobile 里
2.打开MobileTerminal，获取su权限
输入命令，回车。。看图 （跟电脑上一样的） 4.ifile：deb包已经生成</description></item><item><title>Ubuntu 上制作 .deb 详细图文教程</title><link>https://xingxiang.me/blog/463/</link><pubDate>Fri, 31 May 2013 06:27:17 +0000</pubDate><guid>https://xingxiang.me/blog/463/</guid><description>如何汉化插件？ 请看我的第一篇教程： https://xingxiang.me/blog/466/
首先认识一下什么是.deb deb 是 Unix 系统(其实主要是 Linux )下的安装包，基于 tar 包，因此本身会记录文件的权限(读/写/可执行)以及所有者/用户组。
由于 Unix 类系统对权限、所有者、组的严格要求，而 deb 格式安装包又经常会涉及到系统比较底层的操作，所以权限等的设置尤其重要。
deb 包本身有三部分组成： 1.数据包，包含实际安装的程序数据，文件名为 data.tar.XXX；
2.安装信息及控制脚本包，包含 deb 的安装说明，标识，脚本等，文件名为 control.tar.gz；
3.最后一个是 deb 文件的一些二进制数据，包括文件头等信息，一般看不到，在某些软件中打开可以看到。
deb 本身可以使用不同的压缩方式。tar 格式并不是一种压缩格式，而是直接把分散的文件和目录集合在一起，并记录其权限等数据信息。之前提到过的 data.tar.XXX，这里 XXX 就是经过压缩后的后缀名。deb 默认使用的压缩格式为 gzip 格式，所以最常见的就是 data.tar.gz。常有的压缩格式还有 bzip2 和 lzma，其中 lzma 压缩率最高，但压缩需要的 CPU 资源和时间都比较长。
data.tar.gz包含的是实际安装的程序数据，而在安装过程中，该包里的数据会被直接解压到根目录(即 / )，因此在打包之前需要根据文件所在位置设置好相应的文件/目录树。
而 control.tar.gz 则包含了一个 deb 安装的时候所需要的控制信息。一般有 5 个文件：
control，用了记录软件标识，版本号，平台，依赖信息等数据；
preinst，在解包 data.tar.gz 前运行的脚本；
postinst，在解包数据后运行的脚本；
prerm，卸载时，在删除文件之前运行的脚本；
postrm，在删除文件之后运行的脚本；
在 Cydia 系统中，Cydia 的作者 Saurik 另外添加了一个脚本，extrainst_，作用与 postinst 类似。</description></item></channel></rss>