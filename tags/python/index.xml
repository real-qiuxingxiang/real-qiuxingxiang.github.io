<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on Q's Blog</title><link>https://xingxiang.me/tags/python/</link><description>Recent content in Python on Q's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Thu, 21 Apr 2022 07:07:05 +0000</lastBuildDate><atom:link href="https://xingxiang.me/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Python Excel 和 Json 互转</title><link>https://xingxiang.me/blog/1155/</link><pubDate>Thu, 21 Apr 2022 07:07:05 +0000</pubDate><guid>https://xingxiang.me/blog/1155/</guid><description>一、Excel 转 Json import pandas pandas.read_excel(&amp;#34;Data.xlsx&amp;#34;, sheet_name=0).to_json(&amp;#34;1.json&amp;#34;, orient=&amp;#34;records&amp;#34;, force_ascii=False) 二、Json 转 Excel import pandas pandas.read_json(&amp;#34;input.json&amp;#34;,dtype=str).to_excel(&amp;#34;output.xlsx&amp;#34;)</description></item><item><title>Python 批量按文件名关键字新建文件夹并归档文件</title><link>https://xingxiang.me/blog/1149/</link><pubDate>Sun, 27 Mar 2022 03:39:32 +0000</pubDate><guid>https://xingxiang.me/blog/1149/</guid><description>按需求修改规则使用，现在代码的规则对应的文件名为：xxx-xxx-xxx-xxx-xxx-xxx.jpg。
import os import shutil current_path = os.getcwd() print(&amp;#39;当前目录：&amp;#39;+current_path) filename_list = os.listdir(current_path) print(&amp;#39;当前目录下文件：&amp;#39;,filename_list) print(&amp;#39;正在分类整理进文件夹ing...&amp;#39;) for filename in filename_list: try: name1, name2, name3, name4, name5, name6 = filename.split(&amp;#39;-&amp;#39;) //规则 dirName = name1 + &amp;#34;-&amp;#34; + name2 + &amp;#34;-&amp;#34; + name3 + &amp;#34;-&amp;#34; + name4 + &amp;#34;-&amp;#34; + name5 //规则 try: os.mkdir(dirName) print(&amp;#39;创建文件夹：&amp;#39; + dirName) except: pass try: shutil.move(current_path+&amp;#39;/&amp;#39;+filename, current_path+&amp;#39;/&amp;#39;+dirName) print(filename+&amp;#39;转移成功！&amp;#39;) except Exception as e: print(&amp;#39;移动失败:&amp;#39; + e) except: pass print(&amp;#39;整理完毕！&amp;#39;)</description></item><item><title>Python 批量分割裁剪图片</title><link>https://xingxiang.me/blog/1147/</link><pubDate>Sun, 27 Mar 2022 03:20:01 +0000</pubDate><guid>https://xingxiang.me/blog/1147/</guid><description>放到图片目录下运行，以下代码为从中间将图片一分为二，请根据自己需要修改。
from PIL import Image import os path = os.getcwd() print(&amp;#39;当前目录：&amp;#39;+path) path_list = os.listdir(path) print(path_list) j=1 for i in path_list: a = open(os.path.join(path,i),&amp;#39;rb&amp;#39;) img = Image.open(a) w = img.width h = img.height print(&amp;#39;正在处理图片&amp;#39;,i,&amp;#39;宽&amp;#39;,w,&amp;#39;长&amp;#39;,h) box1 = (0,0,w*0.5,h) img1 = img.crop(box1) box2 = (w*0.5,0,w,h) img2 = img.crop(box2) img1.save(str(j)+&amp;#39;.jpg&amp;#39;, dpi=img1.info[&amp;#34;dpi&amp;#34;]) j = j + 1 img2.save(str(j)+&amp;#39;.jpg&amp;#39;, dpi=img2.info[&amp;#34;dpi&amp;#34;]) j = j + 1</description></item><item><title>Python 批量旋转图片</title><link>https://xingxiang.me/blog/1145/</link><pubDate>Sun, 27 Mar 2022 03:17:43 +0000</pubDate><guid>https://xingxiang.me/blog/1145/</guid><description>放到图片目录下运行。
from PIL import Image import os path = os.getcwd() print(&amp;#39;当前目录：&amp;#39;+path) path_list = os.listdir(path) print(path_list) for i in path_list: a = open(os.path.join(path,i),&amp;#39;rb&amp;#39;) img = Image.open(a) w = img.width h = img.height print(&amp;#39;正在处理图片&amp;#39;,i,&amp;#39;宽&amp;#39;,w,&amp;#39;长&amp;#39;,h) if h &amp;gt; w: img.rotate(180, expand=True).save(&amp;#39;0&amp;#39;+i, dpi=img.info[&amp;#34;dpi&amp;#34;]) print(&amp;#39;旋转成功&amp;#39;) print(&amp;#34;&amp;#39;{}&amp;#39;目录下所有图片已经保存到本文件目录下。&amp;#34;.format(path))</description></item><item><title>基于Django 开发的博客系统</title><link>https://xingxiang.me/blog/975/</link><pubDate>Wed, 22 Aug 2018 07:50:40 +0000</pubDate><guid>https://xingxiang.me/blog/975/</guid><description> Python 3.6.6 和 Django 2.1.5 MySQL xadmin 后台管理 Simditor Markdown 编辑器，图片 Drag and Drop 上传 代码高亮 RSS订阅 标签、阅读量 haystack 文章内容搜索 Valine 评论系统 集成 django-compressor，静态文件压缩 Usage 新建虚拟环境 git clone git@github.com:chiuxingxiang/Django-Blog.git virtualenv --python=&amp;amp;lt;py3path&amp;gt; venv . venv/bin/activate 安装依赖 pip install -r requirements.txt 数据库迁移 python manage.py makemigrations python manage.py migrate 创建管理员 python manage.py shell from django.contrib.auth.models import User user=User.objects.create_superuser(&amp;#39;用户名&amp;#39;,&amp;#39;邮箱&amp;#39;,&amp;#39;密码&amp;#39;) 创建搜索索引 python manage.py rebuild_index 压缩静态文件 python manage.py collectstatic python manage.py compress 首页 详情页 + 评论 Tag List xadmin后台 Simditor Markdown 文章编辑器 图片上传</description></item><item><title>Python 3.7 + BeautifulSoup 4 ：豆瓣 Top 250 爬虫</title><link>https://xingxiang.me/blog/966/</link><pubDate>Thu, 26 Jul 2018 13:22:46 +0000</pubDate><guid>https://xingxiang.me/blog/966/</guid><description>输出 .csv 文件，如图：
import requests import csv import random import time import socket import http.client from bs4 import BeautifulSoup def get_html(url, data = None): header = { &amp;#39;Accept&amp;#39;: &amp;#39;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&amp;#39;, &amp;#39;Accept-Encoding&amp;#39;: &amp;#39;gzip, deflate, br&amp;#39;, &amp;#39;Accept-Language&amp;#39;: &amp;#39;zh-CN,zh;q=0.9,en;q=0.8,zh-TW;q=0.7&amp;#39;, &amp;#39;User-Agent&amp;#39;: &amp;#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36&amp;#39; } timeout = random.choice(range(80, 100)) while True: try: response = requests.get(url, headers = header, timeout = timeout) response.encoding = &amp;#39;utf-8&amp;#39; break except socket.</description></item><item><title>Python 3.7 + BeautifulSoup 4 + Scrapy ：简单爬虫实例</title><link>https://xingxiang.me/blog/962/</link><pubDate>Thu, 26 Jul 2018 13:15:47 +0000</pubDate><guid>https://xingxiang.me/blog/962/</guid><description>&lt;p>放假无聊，无聊写个爬虫，把本博客的文章列表页面（https://xingxiang.me/blog）扒下来&lt;/p></description></item></channel></rss>